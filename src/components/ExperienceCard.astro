---
interface Props {
  title: string;
  workPosition: string;
  age: string;
  content: string[];
  technologies: string[];
}
const { title, age, workPosition, content, technologies } = Astro.props;
---

<li class="mb-12">
  <div
    class="group relative grid pb-1 transition-all sm:grid-cols-8 sm:gap-8 md:gap-4 lg:hover:!opacity-100 lg:group-hover/list:opacity-50"
  >
    <div
      class="absolute -inset-x-4 -inset-y-4 z-0 hidden rounded-md transition motion-reduce:transition-none lg:-inset-x-6 lg:block lg:group-hover:bg-indigo-800/50 lg:group-hover:shadow-[inset_0_1px_0_0_rgba(148,163,184,0.1)] lg:group-hover:drop-shadow-lg"
    >
    </div>
    <header
      class="z-10 mb-2 mt-1 text-xs font-semibold uppercase tracking-wide text-slate-500 sm:col-span-2"
    >
      {age}
    </header>
    <div class="z-10 sm:col-span-6">
      <h3 class="font-medium leading-snug text-slate-200">
        <div>
          <span
            class="inline-flex items-baseline font-medium leading-tight text-slate-200 hover:text-purple-500 focus-visible:text-purple-500 group/link text-base"
            aria-label={title}
          >
            <span
              class="absolute -inset-x-4 -inset-y-2.5 hidden rounded md:-inset-x-6 md:-inset-y-4 lg:block"
            ></span>
            <span>{title}</span>
          </span>
          <div>
            <div class="text-slate-500" aria-hidden="true">{workPosition}</div>
          </div>
        </div>
        <p class="mt-2 text-sm leading-normal">
          {content.map((text) => <span class="mb-4 block">{text}</span>)}
        </p>
        <ul class="mt-2 flex flex-wrap" aria-label="Tecnologias usadas">
          {
            technologies.map((tech) => (
              <li class="mr-1.5 mt-2">
                <div class="flex items-center rounded-full bg-purple-400/10 px-3 py-1 text-xs font-medium leading-5 text-purple-500">
                  {tech}
                </div>
              </li>
            ))
          }
        </ul>
      </h3>
    </div>
  </div>
</li>
